(()=>{"use strict";addEventListener("fetch",(e=>{e.respondWith(async function(e,t){if("POST"!==e.method)return new Response("Method Not Allowed",{status:405});try{const a=await e.json(),{data:n,width:s,height:o}=a;if(!n||!s||!o)return new Response("Invalid request format. Data, width, and height are required.",{status:400});const r="data:image/png;base64,";if(!n.startsWith(r))return new Response("Invalid image data format",{status:400});const i=n.slice(r.length),c=Uint8Array.from(atob(i),(e=>e.charCodeAt(0))),d=`ogp-image-${Date.now()}-${s}x${o}.png`;return await t.MY_R2_BUCKET.put(d,c,{httpMetadata:{contentType:"image/png"},customMetadata:{uploaded:(new Date).toISOString(),width:s.toString(),height:o.toString()}}),async function(e,t,a){const n=await caches.open("my-cache"),s=`https://dbe671b68b32efaa8b31a91d2d3d670b.r2.cloudflarestorage.com/ogp-storage/${t}`,o=new URL(s),r=new Request(o.toString(),{method:"GET"});let i=await n.match(r);return i||(i=new Response(a,{headers:{"Content-Type":"image/png","Cache-Control":"public, max-age=3600"}}),await n.put(r,i.clone())),new Response(JSON.stringify({url:s}),{headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}})}(0,d,c)}catch(e){return console.error("Error processing request:",e),new Response("Error processing request: "+(e.message||e),{status:500})}}(e.request,e.env))}))})();